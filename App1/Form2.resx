<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tm0Zk0GyDegAAAAASUVORK5CYII=
</value>
  </data>
</root>